// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lib_repositorios.Implementaciones;

#nullable disable

namespace lib_repositorios.Migrations
{
    [DbContext(typeof(Conexion))]
    [Migration("20250423162018_NombreMigracion4")]
    partial class NombreMigracion4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lib_dominio.Entidades.Bodegas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Capacidad_Max")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Documentos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ID_Bodega")
                        .HasColumnType("int");

                    b.Property<int>("ID_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_Movimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ID_Bodega");

                    b.HasIndex("ID_Empresa");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Empleados", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Carnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Bodega")
                        .HasColumnType("int");

                    b.Property<int>("ID_Rol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_Bodega");

                    b.HasIndex("ID_Rol");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Empresas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Productos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Cantidad_Embase")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio_Compra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Precio_Venta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Productos_Documentos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ID_Documentos")
                        .HasColumnType("int");

                    b.Property<int>("ID_Productos")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_Documentos");

                    b.HasIndex("ID_Productos");

                    b.ToTable("Productos_Documentos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Vehiculos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Vehiculos_Documentos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ID_Documentos")
                        .HasColumnType("int");

                    b.Property<int>("ID_Vehiculos")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_Documentos");

                    b.HasIndex("ID_Vehiculos");

                    b.ToTable("Vehiculos_Documentos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Documentos", b =>
                {
                    b.HasOne("lib_dominio.Entidades.Bodegas", "_Bodegas")
                        .WithMany()
                        .HasForeignKey("ID_Bodega");

                    b.HasOne("lib_dominio.Entidades.Empresas", "_Empresas")
                        .WithMany()
                        .HasForeignKey("ID_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Bodegas");

                    b.Navigation("_Empresas");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Empleados", b =>
                {
                    b.HasOne("lib_dominio.Entidades.Bodegas", "_Bodegas")
                        .WithMany()
                        .HasForeignKey("ID_Bodega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lib_dominio.Entidades.Roles", "_Roles")
                        .WithMany()
                        .HasForeignKey("ID_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Bodegas");

                    b.Navigation("_Roles");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Productos_Documentos", b =>
                {
                    b.HasOne("lib_dominio.Entidades.Documentos", "_Documentos")
                        .WithMany()
                        .HasForeignKey("ID_Documentos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lib_dominio.Entidades.Productos", "_Productos")
                        .WithMany()
                        .HasForeignKey("ID_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Documentos");

                    b.Navigation("_Productos");
                });

            modelBuilder.Entity("lib_dominio.Entidades.Vehiculos_Documentos", b =>
                {
                    b.HasOne("lib_dominio.Entidades.Documentos", "_Documentos")
                        .WithMany()
                        .HasForeignKey("ID_Documentos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lib_dominio.Entidades.Vehiculos", "_Vehiculos")
                        .WithMany()
                        .HasForeignKey("ID_Vehiculos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Documentos");

                    b.Navigation("_Vehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
